<?xml version="1.0" encoding="utf-8"?>
<s:TitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009" 
               xmlns:s="library://ns.adobe.com/flex/spark" 
               xmlns:mx="library://ns.adobe.com/flex/mx"
			   title="{_title}" creationComplete="onCreationComplete()" resize="onResize()">
	
	<mx:Grid id="grid" top="1" right="1" bottom="1" left="1" styleName="grid">
	</mx:Grid>
	<fx:Style>
		@namespace s "library://ns.adobe.com/flex/spark";
		@namespace mx "library://ns.adobe.com/flex/mx";
		.grid {
			horizontalGap: 1;
			verticalGap: 1;
		}
	</fx:Style>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import flash.events.MouseEvent;
			import mx.containers.Grid;
			import mx.containers.GridItem;
			import mx.containers.GridRow;
			import mx.controls.Alert;
			import mx.controls.Image;
			import mx.events.CloseEvent;
			
			import org.openscales.core.Map;
			import org.openscales.core.events.I18NEvent;
			import org.openscales.core.i18n.Catalog;
			
		// hamas : 13.09.10 追加
			private var _byPop:Boolean = false;
			public function set byPop( value:Boolean ) : void {
				this._byPop =  value;
			}
			private var _map:Map = null;
			public function set map( value:Map ) : void {
				this._map = value;
			}

			[Bindable]
			private var _title:String = Catalog.getLocalizationForKey("selectMarker.selectMarker");
			
			private static const ColLength:uint = 10;
			private static const ITEM_SIZE:Number = 21;
			
			private var _selectedIconUrl:String;
			//private var _selectedIcon:Image;
			
			public function onCreationComplete():void
			{
				// アイコンリストの作成
				var iconArray:Array = [
					"../../sys/v4/symbols/172.GIF",
					"../../sys/v4/symbols/173.GIF",
					"../../sys/v4/symbols/173.GIF",
					"../../sys/v4/symbols/174.GIF",
					"../../sys/v4/symbols/175.GIF",
					"../../sys/v4/symbols/176.GIF",
					"../../sys/v4/symbols/177.GIF",
					"../../sys/v4/symbols/178.GIF",
					"../../sys/v4/symbols/179.GIF",
					"icons/001.png",
					"icons/002.png",
					"icons/003.png",
					"icons/004.png",
					"icons/005.png",
					"icons/006.png",
					"icons/007.png",
					"icons/008.png",
					"icons/009.png",
					"icons/010.png",
					"icons/011.png",
					"icons/012.png",
					"icons/013.png",
					"icons/014.png",
					"icons/015.png",
					"icons/016.png",
					"icons/017.png",
					"icons/018.png",
					"icons/019.png",
					"icons/020.png",
					"icons/021.png",
					"icons/022.png",
					"icons/023.png",
					"icons/024.png",
					"icons/025.png",
					"icons/026.png",
					"icons/027.png",
					"icons/028.png",
					"icons/029.png",
					"icons/030.png",
					"icons/031.png",
					"icons/032.png",
					"icons/033.png",
					"icons/034.png",
					"icons/035.png",
					"icons/036.png",
					"icons/037.png",
					"icons/038.png",
					"icons/039.png",
					"icons/040.png",
					"icons/041.png",
					"icons/042.png",
					"icons/043.png",
					"icons/044.png",
					"icons/045.png",
					"icons/046.png",
					"icons/047.png",
					"icons/048.png",
					"icons/049.png",
					"icons/050.png",
					"icons/051.png",
					"icons/052.png",
					"icons/053.png",
					"icons/054.png",
					"icons/055.png",
					"icons/056.png",
					"icons/057.png",
					"icons/058.png",
					"icons/059.png",
					"icons/060.png",
					"icons/061.png",
					"icons/062.png",
					"icons/063.png",
					"icons/064.png",
					"icons/065.png",
					"icons/066.png",
					"icons/067.png",
					"icons/068.png",
					"icons/069.png",
					"icons/070.png",
					"icons/071.png",
					"icons/072.png",
					"icons/073.png",
					"icons/074.png",
					"icons/075.png",
					"icons/076.png",
					"icons/077.png",
					"icons/078.png",
					"icons/079.png",
					"icons/080.png",
					"icons/081.png",
					"icons/082.png",
					"icons/083.png",
					"icons/084.png",
					"icons/085.png",
					"icons/086.png",
					"icons/087.png",
					"icons/088.png",
					"icons/089.png",
					"icons/090.png",
					"icons/091.png",
					"icons/092.png",
					"icons/093.png",
					"icons/094.png",
					"icons/095.png",
					"icons/096.png",
					"icons/097.png",
					"icons/098.png",
					"icons/099.png",
					"icons/100.png",
					"icons/101.png",
					"icons/102.png",
					"icons/103.png",
					"icons/104.png",
					"icons/105.png",
					"icons/106.png",
					"icons/107.png",
					"icons/108.png",
					"icons/109.png",
					"icons/110.png",
					"icons/111.png",
					"icons/112.png",
					"icons/113.png",
					"icons/114.png",
					"icons/115.png",
					"icons/116.png",
					"icons/117.png",
					"icons/118.png",
					"icons/119.png",
					"icons/120.png",
					"icons/121.png",
					"icons/122.png",
					"icons/123.png",
					"icons/124.png",
					"icons/125.png",
					"icons/126.png",
					"icons/127.png",
					"icons/128.png",
					"icons/129.png",
					"icons/130.png",
					"icons/131.png",
					"icons/132.png",
					"icons/133.png",
					"icons/134.png",
					"icons/135.png",
					"icons/136.png",
					"icons/137.png",
					"icons/138.png",
					"icons/139.png",
					"icons/140.png",
					"icons/141.png",
					"icons/142.png",
					"icons/143.png",
					"icons/144.png",
					"icons/145.png",
					"icons/146.png",
					"icons/147.png",
					"icons/148.png",
					"icons/149.png",
					"icons/150.png",
					"icons/151.png",
					"icons/152.png",
					"icons/153.png",
					"icons/154.png",
					"icons/155.png",
					"icons/156.png",
					"icons/157.png",
					"icons/158.png",
					"icons/159.png",
					"icons/160.png",
					"icons/161.png",
					"icons/162.png",
					"icons/163.png",
					"icons/164.png",
					"icons/165.png",
					"icons/166.png",
					"icons/167.png",
					"icons/168.png",
					"icons/169.png",
					"icons/170.png",
					"icons/171.png",
					"icons/180.png",
					"icons/181.png",
					"icons/182.png",
					"icons/183.png",
					"icons/184.png",
					"icons/185.png",
					"icons/186.png",
					"icons/187.png",
					"icons/188.png"
				];
				var rowLength:uint = iconArray.length / 10 + 1;
				for (var i:uint = 0; i < rowLength; i++)
				{
					var gridRow:GridRow = new GridRow();
					grid.addElement(gridRow);
					
					for (var j:uint = 0; j < ColLength; j++)
					{
						var index:uint = i * ColLength + j;
						if (index == iconArray.length) break;
							
						// アイコン画像ロード
						var iconImage:Image = new Image();
						iconImage.source = iconArray[index];
						//iconImage.load(iconArray[index]);
						
						var item:GridItem = new GridItem();
						item.width = ITEM_SIZE;
						item.height = ITEM_SIZE;
						iconImage.addEventListener(MouseEvent.CLICK, onMarkerClick);
						item.addElement(iconImage);
						gridRow.addElement(item);
					}
				}
				this.addElement(grid);
			}
			
			private function onMarkerClick(e:MouseEvent):void 
			{
				var selectedIcon:Image = e.currentTarget as Image;
				if (selectedIcon)
				{
					// 選択したアイコンのURLをセット
					_selectedIconUrl = selectedIcon.source as String;
				}
				// 選択画面を閉じて、クリック待機
				this.dispatchEvent(new CloseEvent(CloseEvent.CLOSE));

			// hamas : 13.09.13 追加
				if( _byPop ){
					this._map.dispatchEvent(new Event("POP_CLOSE_EDIT_STYLE"));
				}
			}
			
			public function onResize():void
			{
				// 表示位置調整
				this.x = parent.width / 2 - this.width / 2;
				this.y = parent.height / 2 - this.height / 2;
			}
			
			/**
			 * Change the text values on Map Language changed
			 * @param event The I18N event received
			 */
			public function onMapLanguageChange(event:I18NEvent):void 
			{
				_title = Catalog.getLocalizationForKey("selectMarker.selectMarker");
			}
			
			public function get selectedIconUrl():String 
			{
				return _selectedIconUrl;
			}
			
			public function set selectedIconUrl(value:String):void 
			{
				_selectedIconUrl = value;
			}
		]]>
	</fx:Script>
	
	
</s:TitleWindow>